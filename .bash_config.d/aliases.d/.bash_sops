#! /bin/bash

function age_install {
	age_version=${1:-latest}
	age_temp_dir=/tmp/age-tmp
	age_url="https://dl.filippo.io/age/${age_version}?for=linux/amd64"

	function handle_error {
		echo "Error: $1"
		cleanup
		exit 1
	}

	function cleanup {
		rm -rf /tmp/age.tar.gz $age_temp_dir
	}

	if ! curl --silent --fail -Lo /tmp/age.tar.gz "$age_url"; then
		handle_error "Failed to download age version $age_version. Please check if the version exists."
	fi

	if ! mkdir -p $age_temp_dir; then
		handle_error "Failed to create temporary directory."
	fi

	if ! tar -xzf /tmp/age.tar.gz -C $age_temp_dir; then
		handle_error "Failed to extract the tar.gz file."
	fi

	if ! sudo cp $age_temp_dir/age/age /usr/local/bin/ || ! sudo cp $age_temp_dir/age/age-keygen /usr/local/bin/; then
		handle_error "Failed to copy binaries to /usr/local/bin."
	fi

	if ! sudo chmod +x /usr/local/bin/age || ! sudo chmod +x /usr/local/bin/age-keygen; then
		handle_error "Failed to set executable permissions."
	fi

	cleanup

	echo "Install: success"
	echo "Age: $(age --version)"
	echo "Age-Keygen: $(age-keygen --version)"
}

function sops_install {
	sops_version=${1:-latest}
	sops_url=""
	sops_binary_path="/usr/local/bin/sops"

	function handle_error {
		echo "Error: $1"
		cleanup
		exit 1
	}

	function cleanup {
		rm -f /tmp/sops
	}

	if [ "$sops_version" == "latest" ]; then
		sops_version=$(curl --silent https://api.github.com/repos/getsops/sops/releases/latest | jq -r .tag_name)
		if [ -z "$sops_version" ]; then
			handle_error "Failed to fetch the latest sops version."
		fi
	fi

	sops_url="https://github.com/getsops/sops/releases/download/${sops_version}/sops-${sops_version}.linux.amd64"

	if ! curl --silent --fail -Lo /tmp/sops "$sops_url"; then
		handle_error "Failed to download sops version $sops_version. Please check if the version exists."
	fi

	if ! chmod +x /tmp/sops; then
		handle_error "Failed to set executable permissions for sops."
	fi

	if ! sudo mv /tmp/sops $sops_binary_path; then
		handle_error "Failed to move sops to /usr/local/bin."
	fi

	cleanup

	echo "Install: success"
	echo "Sops: $($sops_binary_path --version)"
}
